spring.mvc.view.prefix=/views/
spring.mvc.view.suffix=.jsp

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/dbName
spring.datasource.username=dbUser
spring.datasource.password=dbPassword


spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.show-sql=true

spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.schema=classpath:/dbInitScript.sql
server.error.whitelabel.enabled=false
server.error.path=/error

# e poder\u00e1 ter de comentar o c\u00f3digo relativo a H2 na DataSource anterior do projeto!

@Configuration
public class DatabaseConfig {
    // from application.properties
    @Autowired
    Environment environment;
    private final String URL =      "spring.datasource.url";
    private final String USER =     "spring.datasource.username";
    private final String DRIVER =   "spring.datasource.driver-class-name";
    private final String PASSWORD = "spring.datasource.password";    
    @Bean
    DataSource dataSource() {
            DriverManagerDataSource driverManagerDataSource = new DriverManagerDataSource();
            driverManagerDataSource.setUrl(environment.getProperty(URL));
            driverManagerDataSource.setUsername(environment.getProperty(USER));
            driverManagerDataSource.setPassword(environment.getProperty(PASSWORD));
            driverManagerDataSource.setDriverClassName(environment.getProperty(DRIVER));
            return driverManagerDataSource;
    }    
        
    @Bean
    public JdbcTemplate jdbcTemplate() {
        return new JdbcTemplate(dataSource());
    }        
}

